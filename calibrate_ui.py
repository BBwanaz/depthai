# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'calibrate.ui'
#
# Created by: PyQt5 UI code generator 5.15.5
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import cv2


class Ui_MainWindow(object):
    def __init__(self):
        self.camera_type = 'oak-d'

    def setup_ui(self, MainWindow):
        # Main Window
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(906, 704)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("Assets/logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 906, 20))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        # Title
        self.title = QtWidgets.QLabel(self.centralwidget)
        self.title.setGeometry(QtCore.QRect(10, 20, 221, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.title.setFont(font)
        self.title.setObjectName("title")
        # Select Model
        self.select_box = QtWidgets.QGroupBox(self.centralwidget)
        self.select_box.setGeometry(QtCore.QRect(10, 80, 261, 251))
        font.setPointSize(11)
        self.select_box.setFont(font)
        self.select_box.setObjectName("select_box")
        # OAK-1 option
        self.oak_1 = QtWidgets.QRadioButton(self.select_box)
        self.oak_1.setGeometry(QtCore.QRect(10, 40, 99, 21))
        self.oak_1.setFont(font)
        self.oak_1.setObjectName("oak_1")
        self.oak_1.value = 'oak-1'
        self.oak_1.toggled.connect(lambda: self.camera_select(self.oak_1))
        # OAK-D-Lite option
        self.oak_d_lite = QtWidgets.QRadioButton(self.select_box)
        self.oak_d_lite.setGeometry(QtCore.QRect(10, 70, 99, 21))
        self.oak_d_lite.setFont(font)
        self.oak_d_lite.setObjectName("oak_d_lite")
        self.oak_d_lite.value = 'oak-d-lite'
        self.oak_d_lite.toggled.connect(lambda: self.camera_select(self.oak_d_lite))
        # Oak-D option
        self.oak_d = QtWidgets.QRadioButton(self.select_box)
        self.oak_d.setGeometry(QtCore.QRect(10, 100, 99, 21))
        self.oak_d.setFont(font)
        self.oak_d.setChecked(True)
        self.oak_d.setObjectName("oak_d")
        self.oak_d.value = 'oak-d'
        self.oak_d.toggled.connect(lambda: self.camera_select(self.oak_d))
        # Oak-D-pro option
        self.oak_d_pro = QtWidgets.QRadioButton(self.select_box)
        self.oak_d_pro.setGeometry(QtCore.QRect(10, 130, 99, 21))
        self.oak_d_pro.setFont(font)
        self.oak_d_pro.setObjectName("oak_d_pro")
        self.oak_d_pro.value = 'oak-d-pro'
        self.oak_d_pro.toggled.connect(lambda: self.camera_select(self.oak_d_pro))
        # Buttons
        self.calibrate_but = QtWidgets.QPushButton(self.centralwidget)
        self.calibrate_but.setGeometry(QtCore.QRect(10, 400, 91, 31))
        self.calibrate_but.setFont(font)
        self.calibrate_but.setObjectName("calibrate_but")
        self.connect_but = QtWidgets.QPushButton(self.centralwidget)
        self.connect_but.setGeometry(QtCore.QRect(120, 400, 81, 31))
        self.connect_but.setFont(font)
        self.connect_but.setObjectName("connect_but")
        # Logs
        self.logs_box = QtWidgets.QGroupBox(self.centralwidget)
        self.logs_box.setGeometry(QtCore.QRect(20, 470, 871, 191))
        self.logs_box.setFont(font)
        self.logs_box.setObjectName("logs_box")
        self.logs = QtWidgets.QTextBrowser(self.logs_box)
        self.logs.setGeometry(QtCore.QRect(10, 30, 851, 151))
        self.logs.setObjectName("logs")
        MainWindow.setCentralWidget(self.centralwidget)
        # Image
        self.image = QtWidgets.QLabel(self.centralwidget)
        self.image.setGeometry(QtCore.QRect(260, 0, 640, 480))
        self.image.setText("")
        self.image.setPixmap(QtGui.QPixmap("Assets/oak-d.jpg"))
        self.image.setObjectName("image")

        self.retranslate_ui(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


    def retranslate_ui(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Calibration"))
        self.title.setText(_translate("MainWindow", "DepthAI Calibration"))
        self.select_box.setTitle(_translate("MainWindow", "Select Model"))
        self.oak_1.setText(_translate("MainWindow", "OAK-1"))
        self.oak_d_lite.setText(_translate("MainWindow", "OAK-D-Lite"))
        self.oak_d.setText(_translate("MainWindow", "OAK-D"))
        self.oak_d_pro.setText(_translate("MainWindow", "OAK-D-Pro"))
        self.connect_but.setText(_translate("MainWindow", "Connect"))
        self.calibrate_but.setText(_translate("MainWindow", "Calibrate"))
        self.logs_box.setTitle(_translate("MainWindow", "Logs"))

    def camera_select(self, model):
        if model.value == "oak-d":
            self.image.setPixmap(QtGui.QPixmap("Assets/oak-d.jpg"))
            self.camera_type = 'oak-d'
        elif model.value == "oak-d-lite":
            self.image.setPixmap(QtGui.QPixmap("Assets/oak-d-lite.jpg"))
            self.camera_type = 'oak-d-lite'
        elif model.value == "oak-d-pro":
            self.image.setPixmap(QtGui.QPixmap("Assets/oak-d-pro.jpg"))
            self.camera_type = 'oak-d-pro'
        elif model.value == "oak-1":
            self.image.setPixmap(QtGui.QPixmap("Assets/oak-1.jpg"))
            self.camera_type = 'oak-1'


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setup_ui(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
