from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_UI_tests(object):
    def setupUi(self, UI_tests):
        UI_tests.setObjectName("UI_tests")
        UI_tests.resize(766, 717)
        font = QtGui.QFont()
        font.setPointSize(13)
        UI_tests.setFont(font)
        self.centralwidget = QtWidgets.QWidget(UI_tests)
        self.centralwidget.setObjectName("centralwidget")
        self.title = QtWidgets.QLabel(self.centralwidget)
        self.title.setGeometry(QtCore.QRect(10, 10, 751, 51))
        font = QtGui.QFont()
        font.setPointSize(24)
        self.title.setFont(font)
        self.title.setObjectName("title")
        self.save_but = QtWidgets.QPushButton(self.centralwidget)
        self.save_but.setGeometry(QtCore.QRect(510, 390, 61, 25))
        self.save_but.setObjectName("save_but")
        self.automated_tests = QtWidgets.QGroupBox(self.centralwidget)
        self.automated_tests.setGeometry(QtCore.QRect(20, 70, 311, 341))
        self.automated_tests.setObjectName("automated_tests")
        self.automated_tests_labels = QtWidgets.QLabel(self.automated_tests)
        self.automated_tests_labels.setGeometry(QtCore.QRect(10, 30, 221, 301))
        self.automated_tests_labels.setObjectName("automated_tests_labels")
        self.right_cam_res = QtWidgets.QLabel(self.automated_tests)
        self.right_cam_res.setGeometry(QtCore.QRect(240, 110, 51, 31))
        self.right_cam_res.setObjectName("right_cam_res")
        self.prew_out_rgb_res = QtWidgets.QLabel(self.automated_tests)
        self.prew_out_rgb_res.setGeometry(QtCore.QRect(240, 220, 51, 41))
        self.prew_out_rgb_res.setObjectName("prew_out_rgb_res")
        self.jpeg_enc_res = QtWidgets.QLabel(self.automated_tests)
        self.jpeg_enc_res.setGeometry(QtCore.QRect(240, 190, 51, 31))
        self.jpeg_enc_res.setObjectName("jpeg_enc_res")
        self.left_cam_res = QtWidgets.QLabel(self.automated_tests)
        self.left_cam_res.setGeometry(QtCore.QRect(240, 70, 51, 31))
        self.left_cam_res.setObjectName("left_cam_res")
        self.right_strm_res = QtWidgets.QLabel(self.automated_tests)
        self.right_strm_res.setGeometry(QtCore.QRect(240, 300, 51, 31))
        self.right_strm_res.setObjectName("right_strm_res")
        self.usb3_res = QtWidgets.QLabel(self.automated_tests)
        self.usb3_res.setGeometry(QtCore.QRect(240, 30, 51, 21))
        self.usb3_res.setObjectName("usb3_res")
        self.rgb_cam_res = QtWidgets.QLabel(self.automated_tests)
        self.rgb_cam_res.setGeometry(QtCore.QRect(240, 150, 51, 31))
        self.rgb_cam_res.setObjectName("rgb_cam_res")
        self.left_strm_res = QtWidgets.QLabel(self.automated_tests)
        self.left_strm_res.setGeometry(QtCore.QRect(240, 260, 51, 41))
        self.left_strm_res.setObjectName("left_strm_res")
        self.operator_tests = QtWidgets.QGroupBox(self.centralwidget)
        self.operator_tests.setGeometry(QtCore.QRect(360, 70, 321, 291))
        self.operator_tests.setObjectName("operator_tests")
        self.NOT_TESTED_LABEL = QtWidgets.QLabel(self.operator_tests)
        self.NOT_TESTED_LABEL.setGeometry(QtCore.QRect(200, 30, 61, 61))
        self.NOT_TESTED_LABEL.setObjectName("NOT_TESTED_LABEL")
        self.op_rgb_frame = QtWidgets.QFrame(self.operator_tests)
        self.op_rgb_frame.setGeometry(QtCore.QRect(160, 140, 131, 41))
        self.op_rgb_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.op_rgb_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.op_rgb_frame.setLineWidth(0)
        self.op_rgb_frame.setObjectName("op_rgb_frame")
        self.rgb_fail_but = QtWidgets.QRadioButton(self.op_rgb_frame)
        self.rgb_fail_but.setEnabled(True)
        self.rgb_fail_but.setGeometry(QtCore.QRect(110, 10, 16, 16))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.rgb_fail_but.setFont(font)
        self.rgb_fail_but.setText("")
        self.rgb_fail_but.setObjectName("rgb_fail_but")
        self.rgb_ntes_but = QtWidgets.QRadioButton(self.op_rgb_frame)
        self.rgb_ntes_but.setEnabled(True)
        self.rgb_ntes_but.setGeometry(QtCore.QRect(60, 10, 16, 16))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.rgb_ntes_but.setFont(font)
        self.rgb_ntes_but.setText("")
        self.rgb_ntes_but.setChecked(True)
        self.rgb_ntes_but.setObjectName("rgb_ntes_but")
        self.rgb_pass_but = QtWidgets.QRadioButton(self.op_rgb_frame)
        self.rgb_pass_but.setEnabled(True)
        self.rgb_pass_but.setGeometry(QtCore.QRect(10, 10, 16, 16))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.rgb_pass_but.setFont(font)
        self.rgb_pass_but.setText("")
        self.rgb_pass_but.setObjectName("rgb_pass_but")
        self.FAIL_LABEL = QtWidgets.QLabel(self.operator_tests)
        self.FAIL_LABEL.setGeometry(QtCore.QRect(270, 50, 41, 21))
        self.FAIL_LABEL.setObjectName("FAIL_LABEL")
        self.op_right_frame = QtWidgets.QFrame(self.operator_tests)
        self.op_right_frame.setGeometry(QtCore.QRect(160, 230, 131, 41))
        self.op_right_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.op_right_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.op_right_frame.setLineWidth(0)
        self.op_right_frame.setObjectName("op_right_frame")
        self.right_fail_but = QtWidgets.QRadioButton(self.op_right_frame)
        self.right_fail_but.setEnabled(True)
        self.right_fail_but.setGeometry(QtCore.QRect(110, 10, 16, 16))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.right_fail_but.setFont(font)
        self.right_fail_but.setText("")
        self.right_fail_but.setObjectName("right_fail_but")
        self.right_ntes_but = QtWidgets.QRadioButton(self.op_right_frame)
        self.right_ntes_but.setEnabled(True)
        self.right_ntes_but.setGeometry(QtCore.QRect(60, 10, 16, 16))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.right_ntes_but.setFont(font)
        self.right_ntes_but.setText("")
        self.right_ntes_but.setChecked(True)
        self.right_ntes_but.setObjectName("right_ntes_but")
        self.right_pass_but = QtWidgets.QRadioButton(self.op_right_frame)
        self.right_pass_but.setEnabled(True)
        self.right_pass_but.setGeometry(QtCore.QRect(10, 10, 16, 16))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.right_pass_but.setFont(font)
        self.right_pass_but.setText("")
        self.right_pass_but.setObjectName("right_pass_but")
        self.op_jpeg_frame = QtWidgets.QFrame(self.operator_tests)
        self.op_jpeg_frame.setGeometry(QtCore.QRect(160, 90, 131, 41))
        self.op_jpeg_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.op_jpeg_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.op_jpeg_frame.setLineWidth(0)
        self.op_jpeg_frame.setObjectName("op_jpeg_frame")
        self.jpeg_fail_but = QtWidgets.QRadioButton(self.op_jpeg_frame)
        self.jpeg_fail_but.setEnabled(True)
        self.jpeg_fail_but.setGeometry(QtCore.QRect(110, 10, 16, 16))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.jpeg_fail_but.setFont(font)
        self.jpeg_fail_but.setText("")
        self.jpeg_fail_but.setObjectName("jpeg_fail_but")
        self.jpeg_ntes_but = QtWidgets.QRadioButton(self.op_jpeg_frame)
        self.jpeg_ntes_but.setEnabled(True)
        self.jpeg_ntes_but.setGeometry(QtCore.QRect(60, 10, 16, 16))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.jpeg_ntes_but.setFont(font)
        self.jpeg_ntes_but.setText("")
        self.jpeg_ntes_but.setChecked(True)
        self.jpeg_ntes_but.setObjectName("jpeg_ntes_but")
        self.jpeg_pass_but = QtWidgets.QRadioButton(self.op_jpeg_frame)
        self.jpeg_pass_but.setEnabled(True)
        self.jpeg_pass_but.setGeometry(QtCore.QRect(10, 10, 14, 15))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.jpeg_pass_but.setFont(font)
        self.jpeg_pass_but.setText("")
        self.jpeg_pass_but.setObjectName("jpeg_pass_but")
        self.operator_tests_label = QtWidgets.QLabel(self.operator_tests)
        self.operator_tests_label.setGeometry(QtCore.QRect(10, 100, 131, 161))
        self.operator_tests_label.setObjectName("operator_tests_label")
        self.PASS_LABEL = QtWidgets.QLabel(self.operator_tests)
        self.PASS_LABEL.setGeometry(QtCore.QRect(150, 50, 41, 17))
        self.PASS_LABEL.setObjectName("PASS_LABEL")
        self.op_left_frame = QtWidgets.QFrame(self.operator_tests)
        self.op_left_frame.setGeometry(QtCore.QRect(160, 180, 131, 41))
        self.op_left_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.op_left_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.op_left_frame.setLineWidth(0)
        self.op_left_frame.setObjectName("op_left_frame")
        self.left_fail_but = QtWidgets.QRadioButton(self.op_left_frame)
        self.left_fail_but.setEnabled(True)
        self.left_fail_but.setGeometry(QtCore.QRect(110, 10, 16, 16))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.left_fail_but.setFont(font)
        self.left_fail_but.setText("")
        self.left_fail_but.setObjectName("left_fail_but")
        self.left_ntes_but = QtWidgets.QRadioButton(self.op_left_frame)
        self.left_ntes_but.setEnabled(True)
        self.left_ntes_but.setGeometry(QtCore.QRect(60, 10, 16, 16))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.left_ntes_but.setFont(font)
        self.left_ntes_but.setText("")
        self.left_ntes_but.setChecked(True)
        self.left_ntes_but.setObjectName("left_ntes_but")
        self.left_pass_but = QtWidgets.QRadioButton(self.op_left_frame)
        self.left_pass_but.setEnabled(True)
        self.left_pass_but.setGeometry(QtCore.QRect(10, 10, 16, 16))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.left_pass_but.setFont(font)
        self.left_pass_but.setText("")
        self.left_pass_but.setObjectName("left_pass_but")
        self.logs = QtWidgets.QGroupBox(self.centralwidget)
        self.logs.setGeometry(QtCore.QRect(10, 430, 741, 221))
        self.logs.setObjectName("logs")
        self.date_time_label = QtWidgets.QLabel(self.logs)
        self.date_time_label.setGeometry(QtCore.QRect(10, 40, 281, 21))
        self.date_time_label.setObjectName("date_time_label")
        self.test_type_label = QtWidgets.QLabel(self.logs)
        self.test_type_label.setGeometry(QtCore.QRect(10, 60, 281, 21))
        self.test_type_label.setObjectName("test_type_label")
        self.IMU_prog_bar = QtWidgets.QProgressBar(self.logs)
        self.IMU_prog_bar.setGeometry(QtCore.QRect(540, 40, 118, 23))
        self.IMU_prog_bar.setProperty("value", 24)
        self.IMU_prog_bar.setObjectName("IMU_prog_bar")
        self.FLASH_IMU_LABEL = QtWidgets.QLabel(self.logs)
        self.FLASH_IMU_LABEL.setGeometry(QtCore.QRect(450, 40, 81, 17))
        self.FLASH_IMU_LABEL.setObjectName("FLASH_IMU_LABEL")
        self.logs_txt_browser = QtWidgets.QTextBrowser(self.logs)
        self.logs_txt_browser.setGeometry(QtCore.QRect(10, 90, 721, 121))
        self.logs_txt_browser.setObjectName("logs_txt_browser")
        UI_tests.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(UI_tests)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 766, 29))
        self.menubar.setObjectName("menubar")
        UI_tests.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(UI_tests)
        self.statusbar.setObjectName("statusbar")
        UI_tests.setStatusBar(self.statusbar)

        self.retranslateUi(UI_tests)
        QtCore.QMetaObject.connectSlotsByName(UI_tests)

    def retranslateUi(self, UI_tests):
        _translate = QtCore.QCoreApplication.translate
        UI_tests.setWindowTitle(_translate("UI_tests", "MainWindow"))
        self.title.setText(_translate("UI_tests", "<html><head/><body><p align=\"center\">UNIT TEST IN PROGRESS</p></body></html>"))
        self.save_but.setText(_translate("UI_tests", "SAVE"))
        self.automated_tests.setTitle(_translate("UI_tests", "Automated Tests"))
        self.automated_tests_labels.setText(_translate("UI_tests", "<html><head/><body><p align=\"right\"><span style=\" font-size:14pt;\">USB3</span></p><p align=\"right\"><span style=\" font-size:14pt;\">Left camera connected</span></p><p align=\"right\"><span style=\" font-size:14pt;\">Right Camera Connected</span></p><p align=\"right\"><span style=\" font-size:14pt;\">RGB Camera connected</span></p><p align=\"right\"><span style=\" font-size:14pt;\">JPEG Encoding Stream</span></p><p align=\"right\"><span style=\" font-size:14pt;\">preview-out-rgb Stream</span></p><p align=\"right\"><span style=\" font-size:14pt;\">left Stream</span></p><p align=\"right\"><span style=\" font-size:14pt;\">right Stream</span></p></body></html>"))
        self.right_cam_res.setText(_translate("UI_tests", "<html><head/><body><p><span style=\" font-size:14pt; color:#00aa00;\">PASS</span></p></body></html>"))
        self.prew_out_rgb_res.setText(_translate("UI_tests", "<html><head/><body><p><span style=\" font-size:14pt; color:#00aa00;\">PASS</span></p></body></html>"))
        self.jpeg_enc_res.setText(_translate("UI_tests", "<html><head/><body><p><span style=\" font-size:14pt; color:#00aa00;\">PASS</span></p></body></html>"))
        self.left_cam_res.setText(_translate("UI_tests", "<html><head/><body><p><span style=\" font-size:14pt; color:#00aa00;\">PASS</span></p></body></html>"))
        self.right_strm_res.setText(_translate("UI_tests", "<html><head/><body><p><span style=\" font-size:14pt; color:#00aa00;\">PASS</span></p></body></html>"))
        self.usb3_res.setText(_translate("UI_tests", "<html><head/><body><p><span style=\" font-size:14pt; color:#ff0000;\">FAIL</span></p></body></html>"))
        self.rgb_cam_res.setText(_translate("UI_tests", "<html><head/><body><p><span style=\" font-size:14pt; color:#00aa00;\">PASS</span></p></body></html>"))
        self.left_strm_res.setText(_translate("UI_tests", "<html><head/><body><p><span style=\" font-size:14pt; color:#00aa00;\">PASS</span></p></body></html>"))
        self.operator_tests.setTitle(_translate("UI_tests", "Operator Tests"))
        self.NOT_TESTED_LABEL.setText(_translate("UI_tests", "<html><head/><body><p align=\"center\"><span style=\" font-size:11pt; color:#aaaa00;\">Not<br>Tested</span></p></body></html>"))
        self.FAIL_LABEL.setText(_translate("UI_tests", "<html><head/><body><p><span style=\" font-size:11pt; color:#ff0000;\">FAIL</span></p></body></html>"))
        self.operator_tests_label.setText(_translate("UI_tests", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"right\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\">\n"
"JPEG Encoding <br><br>\n"
"preview-out-rgb <br><br>\n"
"Stream Left <br><br>\n"
"Stream Right</span></p></body></html>"))
        self.PASS_LABEL.setText(_translate("UI_tests", "<html><head/><body><p><span style=\" font-size:11pt; color:#00aa7f;\">PASS</span></p></body></html>"))
        self.logs.setTitle(_translate("UI_tests", "Logs"))
        self.date_time_label.setText(_translate("UI_tests", "date_time: "))
        self.test_type_label.setText(_translate("UI_tests", "test_type: "))
        self.FLASH_IMU_LABEL.setText(_translate("UI_tests", "Flash IMU"))
        self.logs_txt_browser.setHtml(_translate("UI_tests", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a name=\"lipsum\"></a>Lorem ipsum dolor sit amet, consectetur adipiscing elit. In dignissim tristique luctus. Aliquam erat volutpat. Nulla efficitur aliquet ultricies. Sed commodo nibh quis turpis faucibus sodales. Proin tempus volutpat tincidunt. Vivamus rutrum viverra dignissim. Nunc quis justo aliquam enim auctor vehicula id non lorem. </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Mauris vehicula vulputate risus, at sagittis metus fermentum a. Vestibulum ornare neque vel suscipit rutrum. Etiam id facilisis odio, eu luctus diam. Morbi feugiat lacinia mauris a semper. Donec porta accumsan augue, ut mollis est ultricies sed. Nunc non mauris tincidunt, lacinia justo non, tincidunt lacus. Donec vitae gravida dui. Phasellus tempus tortor lorem, fringilla sodales est elementum et. Integer lacinia hendrerit vestibulum. Proin pellentesque nunc quis ante volutpat sodales. Curabitur justo sem, mattis in dolor dapibus, ultrices tincidunt ligula. Donec sit amet nisi nulla. Praesent hendrerit mauris gravida, scelerisque turpis sit amet, dapibus est. </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Quisque eu nulla turpis. Duis sed nisl magna. Donec ac sagittis massa. Integer pharetra, tellus sit amet dignissim congue, libero mi auctor mauris, nec tristique tortor tortor ac nulla. Praesent magna elit, dapibus vitae dictum quis, viverra id nibh. Sed sagittis quam sit amet ante mollis blandit. Aliquam sit amet nibh neque. Nunc condimentum dui vel elit vestibulum, pharetra pulvinar urna convallis. Sed sed leo ipsum. Proin mollis lacinia finibus. </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Vestibulum non sollicitudin massa, sed aliquet dolor. Mauris justo lacus, lacinia et porttitor sed, lacinia quis neque. Suspendisse mattis erat et risus accumsan varius. Vestibulum felis nisl, tincidunt et fringilla quis, porta vel nulla. Pellentesque vitae finibus dolor, eu aliquam tellus. Donec bibendum arcu non velit efficitur, vitae tempor ex porttitor. Sed gravida arcu ante, vitae tincidunt nibh iaculis in. Etiam massa ipsum, sodales sed mi sed, condimentum laoreet risus. Sed condimentum lectus in elit maximus, eu condimentum neque viverra. </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Quisque risus erat, vestibulum ac volutpat vitae, sollicitudin ac sapien. Duis porta eleifend aliquam. Cras tempus augue justo, eu tincidunt diam blandit a. Praesent eget nulla ut erat tristique laoreet. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse egestas dictum leo, nec lacinia nisi dapibus sed. Donec pharetra sem a risus hendrerit laoreet. Vestibulum porttitor neque vel arcu maximus, sit amet tincidunt ipsum condimentum. Ut eget est mi. Aliquam a imperdiet est, eget elementum dolor. Aenean egestas eleifend nisi id rhoncus. Quisque sed odio vitae lectus dictum iaculis quis id sapien. Cras mollis nisl purus, eu laoreet massa tempor ac. Etiam faucibus, nunc eu venenatis interdum, odio odio egestas lectus, ac vehicula turpis ex nec mi. Etiam vitae pretium orci, nec gravida erat. Morbi porta malesuada eros, dictum porttitor sem ultricies et. </p></body></html>"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    UI_tests = QtWidgets.QMainWindow()
    ui = Ui_UI_tests()
    ui.setupUi(UI_tests)
    UI_tests.show()
    sys.exit(app.exec_())
